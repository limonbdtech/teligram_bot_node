// bot.js
const express = require("express");
const bodyParser = require("body-parser");
const TelegramBot = require("node-telegram-bot-api");
const Sentiment = require("sentiment");
const cron = require("node-cron");
const axios = require("axios");
const config = require("./config"); // BOT_TOKEN + WEBHOOK_URL

const app = express();
app.use(bodyParser.json());

// Initialize bot (no polling)
const bot = new TelegramBot(config.BOT_TOKEN);
const sentiment = new Sentiment();

// ========================
// Existing wordlist / Police Mode code unchanged
// ========================
const wordlist = [
  'ржЪрзБржжрж┐','ржЪрзЛржж','ржорж╛ржЧрзА','рж╣рж╛рж░рж╛ржорж┐','ржЧрж╛ржзрж╛','ржмрзЛржХрж╛','ржЪрзБрждржорж╛рж░рж╛ржирж┐','ржЦрж╛ржиржХрж┐рж░ржкрзЛрж▓рж╛','рж╢рзБрзЯрзЛрж░',
  'рж╢рж╛рж▓рж╛','ржорж╛ржжрж╛рж░ржЪрзЛржж','ржмрж╛ржкржЪрзЛржж','ржЪрзБрждрж┐рзЯрж╛','chudi','chod','magi','harami','gadha','boka',
  'chutmarani','khanakirpola','shuar','shala','madarchod','bapchod','chutiya','fuck',
  'motherfucker','shit','bitch','asshole','bastard','idiot','fraud','cheat',
  'looter','conman','admin fraud','fake','thief',
  'ржПржбржорж┐ржи ржЪрзБржжрж┐','ржПржбржорж┐ржи ржЪрзЛрж░','ржПржбржорж┐ржи ржЦрж╛рж░рж╛ржк','this is a scam','admin fraud',
  'Pulu Marma ржмрж╛ржЯржкрж╛рж░','Pulu Marma ржЪрзЛрж░','pulu marma ржЪрзЛрж░','pulu marma ржПржХржЬржи ржмрж╛ржЯржкрж╛рж░',
  'ржкрзБрж▓рзБ ржорж╛рж░ржорж╛ ржЪрзЛрж░','ржкрзБрж▓рзБ ржорж╛рж░ржорж╛ ржмрж╛ржЯржкрж╛рж░','ржкрзБрж▓рзБ ржорж╛рж░ржорж╛ ржорж╛ржирзБрж╖рзЗрж░ ржЯрж╛ржХрж╛ ржорзЗрж░рзЗ ржЦрж╛рзЯ',
  'INNER CIRCLE 9 ржПржЗ ржЧрзНрж░рзБржк ржПржбржорж┐ржи @PuluMarma Mushasi Miyamoto ржПржХржЯрж╛ ржкрзНрж░рждрж╛рж░ржХ ржкрзЗржЗржб ржХрзЛрж░рзНрж╕ ржХрж░рж╛ржирзЛрж░ ржирж╛ржорзЗ ржорж╛ржирзБрж╖рзЗрж░ ржерзЗржХрзЗ ржЯрж╛ржХрж╛ ржорзЗрж░рзЗ ржЦрж╛ржпрж╝',
  'Pulu рж╕рзЗ ржирж┐ржЬрзЗржУ ржЯрзНрж░рзЗржбрж┐ржВ ржкрж╛рж░рзЗ ржирж╛ ржЕржержЪ ржкрзЗржЗржб ржХрзЛрж░рзНрж╕ ржЪрж╛рж▓рзБ ржХрж░рзЗ ржлрзЗрж▓рж╕рзЗ',
  'рж╕ржмрж╛ржЗ ржнрзБржпрж╝рж╛ ржорзЗржирзНржЯрж░ PULU рж╣ржЗрждрзЗ рж╕рж╛ржмржзрж╛ржи',
  'ржУрж░ ржЧрзНрж░рзБржкрзЗ 10-12 ржЯрж╛ ржжрж╛рж▓рж╛рж▓ ржЖржЫрзЗ',
  'ржУрж░ ржжрж╛рж▓рж╛рж▓ржжрзЗрж░ ржХржерж╛ржпрж╝ ржмрж┐ржнрзНрж░рж╛ржирзНржд рж╣ржмрзЗржи ржирж╛',
  'ржпрзЗрж╕ржм ANALYSIS ржжрзЗржпрж╝ ржмрзЗрж╢рж┐рж░ржнрж╛ржЧржЗ SL рж╣рж┐ржЯ ржЦрж╛ржпрж╝',
  'Pulu ржпрзЗ ржЯрзНрж░рзЗржбрж┐ржВ ржкрж╛рж░рзЗ ржУржХрзЗ ржПржХржЯрж╛ ржкрзНрж░ржорж╛ржг ржжрж┐рждрзЗ ржмрж▓рзЗржи рждрзЛ'
];
const userOffenses = {};

// Set webhook
bot.setWebHook(`${config.WEBHOOK_URL}/bot${config.BOT_TOKEN}`);

// Webhook route
app.post(`/bot${config.BOT_TOKEN}`, (req, res) => {
  bot.processUpdate(req.body);
  res.sendStatus(200);
});



// -------------------------------
// Debug: ржжрзЗржЦрж╛рж░ ржЬржирзНржп chat.id
// -------------------------------
bot.on("message", (msg) => {
    console.log("Chat ID:", msg.chat.id);
});

// ========================
// рзз. ржирждрзБржи рж╕ржжрж╕рзНржп рж╕рзНржмрж╛ржЧрждржо
// ========================
bot.on("new_chat_members", (msg) => {
    msg.new_chat_members.forEach(member => {
        bot.sendMessage(msg.chat.id, `Welcome to the group ЁЯОЙ ${member.first_name}`);
    });
});

// ========================
// рзи. ржЯрж╛ржЗржо-ржнрж┐рждрзНрждрж┐ржХ ржорзЗрж╕рзЗржЬ (cron)
// ========================

// рж╕ржХрж╛рж▓ рж╢рзБржнрзЗржЪрзНржЫрж╛ 08:00
cron.schedule('0 8 * * *', () => {
    bot.sendMessage(config.GROUP_CHAT_ID, 'рж╕рзБржкрзНрж░ржнрж╛ржд! ЁЯМЮ');
});

// рж░рж╛ржд рж╢рзБржнрзЗржЪрзНржЫрж╛ 21:00
cron.schedule('0 21 * * *', () => {
    bot.sendMessage(config.GROUP_CHAT_ID, 'рж╢рзБржн рж░рж╛рждрзНрж░рж┐! ЁЯМЩ');
});

// рж╢рзБржХрзНрж░ржмрж╛рж░ ржЬрзБржорж╛ ржорзЛржмрж╛рж░ржХ 09:00
cron.schedule('0 9 * * 5', () => {
    bot.sendMessage(config.GROUP_CHAT_ID, 'ржЬрзБржорж╛ ржорзЛржмрж╛рж░ржХ! ЁЯХМ');
});

// ========================
// ========================
// ========================
// рзй. Market Update (BTC + Forex + US100 + Holiday Check)
// ========================
const FINNHUB_KEY = "d2r8euhr01qlk22s5c90d2r8euhr01qlk22s5c9g";

async function sendMarketUpdate() {
    try {
        const now = new Date();
        const hour = now.getUTCHours() + 6; // BD Time (UTC+6)
        const day = now.getDay(); // 0=Sunday, 6=Saturday

        let forexMsg = "";
        let us100Msg = "";
        let bankHoliday = false;

        // -------- Check Bank Holiday (US Market) --------
        try {
            const calRes = await axios.get(`https://finnhub.io/api/v1/calendar/holidays?country=US&from=${now.toISOString().split("T")[0]}&to=${now.toISOString().split("T")[0]}&token=${FINNHUB_KEY}`);
            if (calRes.data.holidays && calRes.data.holidays.length > 0) {
                bankHoliday = true;
            }
        } catch {
            bankHoliday = false; // API fail рж╣рж▓рзЗ false ржзрж░рзЗ ржирж╛ржУ
        }

        // -------- Forex Market (MonтАУFri, 08:00тАУ00:00) --------
        if (day !== 0 && day !== 6 && hour >= 8 && hour < 24 && !bankHoliday) {
            try {
                const forexRes = await axios.get(`https://finnhub.io/api/v1/forex/rates?base=USD&token=${FINNHUB_KEY}`);
                const usdEur = forexRes.data.rates.EUR;
                const usdGbp = forexRes.data.rates.GBP;
                forexMsg = `USD/EUR: ${usdEur.toFixed(4)}\nUSD/GBP: ${usdGbp.toFixed(4)}`;
            } catch {
                forexMsg = "ЁЯУв Forex Market Closed ржмрж╛ API Error";
            }
        } else if (bankHoliday) {
            forexMsg = "ЁЯУв Forex Market Closed (Bank Holiday)";
        } else {
            forexMsg = "ЁЯУв Forex Market Closed (Weekend / Off Hours)";
        }

        // -------- US100 (Nasdaq) --------
        if (day !== 0 && day !== 6 && hour >= 8 && hour < 24 && !bankHoliday) {
            try {
                const us100 = await axios.get(`https://finnhub.io/api/v1/quote?symbol=^NDX&token=${FINNHUB_KEY}`);
                const us100Price = us100.data.c;
                us100Msg = us100Price ? `US100: ${us100Price}` : "ЁЯУв US100 Data Not Available";
            } catch {
                us100Msg = "ЁЯУв US100 Market Closed ржмрж╛ API Error";
            }
        } else if (bankHoliday) {
            us100Msg = "ЁЯУв US100 Market Closed (Bank Holiday)";
        } else {
            us100Msg = "ЁЯУв US100 Market Closed (Weekend / Off Hours)";
        }

        // -------- Bitcoin 24/7 --------
        let btcMsg = "";
        try {
            const btc = await axios.get('https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd');
            const btcPrice = btc.data.bitcoin.usd;
            btcMsg = `BTC/USD: ${btcPrice}`;
        } catch {
            btcMsg = "тЪая╕П BTC Data Fetch Error";
        }

        // -------- Final Message --------
        const message = `ЁЯУК Market Update:\n\n${forexMsg}\n${us100Msg}\n${btcMsg}`;
        bot.sendMessage(config.GROUP_CHAT_ID, message);

    } catch (error) {
        console.error('Market Update Error:', error.message);
    }
}

// ржкрзНрж░рждрж┐ рзз ржШржирзНржЯрж╛ Market Update
// cron.schedule('0 * * * *', sendMarketUpdate);

// // ржкрзНрж░рждрж┐ рззрзж ржорж┐ржирж┐ржЯрзЗ Market Update (Test Mode)
// cron.schedule('*/10 * * * *', sendMarketUpdate);
// ржкрзНрж░рждрж┐ рзл ржорж┐ржирж┐ржЯрзЗ Market Update (Test Mode)
cron.schedule('*/5 * * * *', sendMarketUpdate);



// рзк. Message handler (existing Police Mode)
// ========================
bot.on("message", async (msg) => {
  if (!msg.text) return;

  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const username = msg.from.username || msg.from.first_name || userId;
  const text = msg.text;

  const cleanText = text.replace(/[.,!?;:()\[\]{}"]/g, " ").trim().toLowerCase();
  const detectedWords = wordlist.filter(word => cleanText.includes(word.toLowerCase()));
  const sentimentScore = sentiment.analyze(cleanText).score;

  if (detectedWords.length > 0 || sentimentScore < -2) {
    await bot.deleteMessage(chatId, msg.message_id).catch(() => {});
    userOffenses[userId] = (userOffenses[userId] || 0) + 1;
    await bot.banChatMember(chatId, userId).catch(() => {});

    let reason = [];
    if (detectedWords.length > 0) reason.push(`ЁЯзи ржЧрж╛рж▓рж┐рж░ рж╢ржмрзНржж: ${detectedWords.join(", ")}`);
    if (sentimentScore < -2) reason.push(`ЁЯШб ржирзЗрждрж┐ржмрж╛ржЪржХ ржорзЗрж╕рзЗржЬ (Score: ${sentimentScore})`);

    const banMessage =
      `ЁЯЪФЁЯСо ржкрзБрж▓рж┐рж╢рзЗрж░ ржЬрж░рзБрж░рж┐ ржЕржнрж┐ржпрж╛ржи ЁЯСоЁЯЪФ\n\n` +
      `ЁЯФЧ ржЕржкрж░рж╛ржзрзА: @${username}\n` +
      `ЁЯУМ ржЕржнрж┐ржпрзЛржЧ: ${reason.join(" | ")}\n\n` +
      `тЪЦя╕П рж░рж╛ржпрж╝: рж╕рзНржерж╛ржпрж╝рзА ржХрж╛рж░рж╛ржжржгрзНржб (BAN) тЫФ\n` +
      `ЁЯЪУ ржирзЛржЯ: ржЧрзНрж░рзБржкрзЗ ржЧрж╛рж▓рж┐ ржжрж┐рж▓рзЗ ржкрзБрж▓рж┐рж╢ ржПрж╕рзЗ ржзрж░рзЗ ржирж┐ржпрж╝рзЗ ржпрж╛ржпрж╝ ЁЯдн`;

    await bot.sendMessage(chatId, banMessage);
  }
});

// Home route
app.get('/', (req, res) => {
  res.send('Bot is running тЬЕ');
});

// Start Express server
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`ЁЯЪА Server running on port ${PORT}`);
});